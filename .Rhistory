grep(pattern = "GRE", "i did grate in the GRE GRE")
grep(pattern = {"GRE", "did"}, "i did grate in the GRE GRE")
textx <- read.table(choose.files())
texty <- read.table(choose.file())
texty <- read.table(choose.files())
textsub <- read.table(choose.files())
library(lattice)
str(state.x77)
head(state.x77)
dim(state.x77)
xplot(Life.Exp ~ income | region, dta = state)
xyplot(Life.Exp ~ income | region, dta = state)
data.frame(state.x77, region = state.region)
state <- data.frame(state.x77, region = state.region)
state.region
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4, 1))
?data
hist(x)
hist()
hist(state.region)
cars
hist(cars$speed)
histogram(cars.speed)
histogram(cars$speed)
hist(cars$speed)
histogram(cars$speed)
mtcars
boxplot(mpg~cyl, mtcars)
boxplot(hp~cyl, mtcars)
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col = "blue")
abline( h = 12, col = green)
abline(h= 12)
hist(ppm, col = "green")
rug(ppm)
low
high
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline( v = 12, lwd = 2 )
abline( v = median(ppm), lwd = 4, color = "magenta" )
abline( v = median(ppm), color = "magenta", lwd = 4 )
abline( v = median(ppm), col = "magenta", lwd = 4 )
pollution
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg, col = )
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25 ~ region, pollution, col = "red")
par(mfrow = c(2,1), mar = c(4,4,2,1))
east <- subset(pollution, region == "east")
east
head(east)
hist(east$pm25, col = "green", )
hist(subset(pollution, region == "west")[,1], col = "green")
hist(subset(pollution, region == "west")$pm25, col = "green")
fdsf
plot(latitude, pm25, pollution)
plot(pollution$latitude, pollution$pm25)
with(pollution, plot(latitude, region))
with(pollution, plot(latitude, pm25))
abline(h = 12, lwd = 2, lty = 2)
plot(pollution$longitude, ppm, col = pollution$region  )
plot(pollution$latitude, ppm, col = pollution$region  )
adline(h = 12, lwd = 2, lty = 2)
abline(h = 12, lwd = 2, lty = 2)
par(mfrows = c(1,2), mar = c(5,4,2,1))
par(mfrow = c(1,2), mar = c(5,4,2,1))
west <- subset(pollution, region == "west")
plot(west$latitude, west$pm25, main = "west")
plot(west$latitude, west$pm25, main = "West")
east <- subset(pollution, region = "east")
east <- subset(pollution, region == "east")
east <- subset(pollution, region == "east")
east <- subset(pollution, region == "East")
plot(east$latitude, east$pm25, main = "East")
?Devices
with(feithful, plot(eruptions, waiting))
with(feithful, plot(eruptions, waiting))
with(faithful, plot(eruptions, waiting))
plot(eruptions ~ waiting, feithful)
plot(eruptions ~ waiting, faithful)
plot(waiting ~ eruptions, faithful)
plot(eruptions ~ waiting, faithful, main = "Old Faithful Geyser data")
main("Old Faithful Geyser data")
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file = "myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, "geyserplot.png")
dev.copy(png, file = "geyserplot.png")
dev.off()
head(cars)
with(cars, plot(speed, dist()))
with(cars, plot(speed, dist)
)
text(mean(cars$speed), max(cars$dist), "SWIRL rules")
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
?state
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, state, layout = c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
gplot(displ ~ hwy, data = mpg)
gplot(displ, hwy, data = mpg)
qplot(dipl, hwy, data = mpg)
qplot(displ, hwy, data = mpg)
library(dplyr)
getwd()
tbl_df(choose.files())
mpg <- tbl_df(choose.files())
head(mpg)
mpg <- tbl_df(read.csv(choose.files()))
head(mpg)
srt(mpg)
str(mpg)
mpg2 <- select(mpg, make, model, year, cylinders, displ, trany )
head(mpg2)
mpg2 <- select(mpg, make, model, year, cylinders, displ, trany , mpg)
mpg2 <- select(mpg, make, model, year, cylinders, displ, trany , mpg)
mpg2 <- select(mpg, make, model, year, cylinders, displ, trany , mpg$mpg)
mpg0 <- tbl_df(read.csv(choose.files()))
mpg2 <- select(mpg0, make, model, year, cylinders, displ, trany , mpg)
mpg2 <- select(mpg0, make, model, year, cylinders, displ, trany , mpg)
mpg2 <- select(mpg0, make, model, year, cylinders, displ, trany , phevComb, phevHwy, phevCity)
head(mpg2)
mpg <- select(mpg0, make, model, year, cylinders, displ, trany , phevComb, phevHwy, phevCity)
plot(mpg$year, mpg$phevComb)
quantile(mpg$phevComb)
plot(mpg$year, mpg$displ)
mpg <- select(mpg0, make, model, year, cylinders, displ, trany , phevComb, phevHwy, phevCity, comb08)
quantile(mpg$comb08)
sum(is.na(mpg$comb08))
plot(mpg$year, mpg$comb08)
filter(mpg, model = "Corolla")
filter(mpg, model == "Corolla")
corolla <- filter(mpg, model == "Corolla")
plot(mpg$year, mpg$comb08)
plot(corolla$year, corolla$comb08)
corolla2016 <- filter(mpg, model == "Corolla", year = 2016)
corolla2016 <- filter(mpg, model == "Corolla", year == 2016)
corolla2016
corolla <- filter(mpg, model == "*[C][c]orolla*")
corolla
corolla <- filter(mpg, model == "*Corolla*")
corolla
corolla <- filter(mpg, model == "^Corolla")
corolla
corolla <- filter(mpg, model == "Corolla")
crolla
corolla
toyota <- filter(mpg, model == "Toyota")
distinct(toyota$model)
table(toyota$model)
str(toyota$model)
group_by(mpg, year)
summarise(mpg, mean(comb08))
summarise(mpg, mean)
summarise(mpg, mean())
summarise(mpg, promedio = mean())
summarise(mpg, promedio = mean
)
mpg
mpg <- group_by(mpg, year)
mpg
summarise(mpg, promedio = mean
)
summarise(mpg, mean())
summarise(mpg, mean(comb08))
view(summarise(mpg, mean(comb08)))
View(summarise(mpg, mean(comb08)))
four <- filter(mpg, cylinders <= 6)
four <- group_by(four, year)
summarise(four,mean())
summarise(four,mean(comb08))
View(summarise(four,mean(comb08)))
table(four$cylinders)
swirl()
swirl
swirl()
swirl()
swirl()
library(swirl)
swirl()
library(swirl)
swirl()
exit()
library(swirl)
swirl()
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airqualite$Ozone)
hist(airquality$Ozone)
table(airquality$Month)
hist(Ozone ~ Month, airquality)
boxplot(Ozone ~ Month, airquality)
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue" col.lab = "red")
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
title(main= "Ozone and Wind in New York City")
with(airquality, plot(Ozone, wind))
with(airquality, plot(Ozone, Wind))
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
length(par())
names(par())
par()
par()$pin
4
par("pg")
par("fg")
par("pch")
par(lty)
par("lty")
plot(airquality$Ozone, airquality$Wind, type = "n")
plot(airquality$Wind, airquality$Ozone, type = "n")
title(main = "Wind and Ozone in NYC")
may <- subset(airquality, Month == "5")
may <- subset(airquality, Month=="5")
may <- subset(airquality, Month==5)
plot(may$Wind, may$Ozone, pch = "24", bg = "blue" )
plot(may$Wind, may$Ozone, pch = "24" )
plot(may$Wind, may$Ozone, pch = 24 )
plot(may$Wind, may$Ozone, pch = 24, bg = "blue" )
plot(may$Wind, may$Ozone, color = "blue", pch = 17)
plot(may$Wind, may$Ozone, col = "blue", pch = 17)
plot(may$Wind,may$Ozone,col="blue",pch=17)
points(may$Wind, may$Ozone, col= "blue", pch = 17)
notmay subset(airquality , !(month == 5))
notmay <-  subset(airquality , !(month == 5))
notmay <-  subset(airquality , month != 5)
notmay <-  subset(airquality , Month != 5)
points(notmay$Wind, notmay$Ozone, col = red, pch = 8)
points(notmay$Wind, notmay$Ozone, col = "red", pch = 8)
legend("topright", c(17,8), c("blue", "red"), c("May", "Other Months"))
legend("topright", pch = c(17,8), col = c("blue", "red"), legend = c("May", "Other Months"))
abline(v = median(airquality$Wind), lty = 2, lwd = 2)
mfrow(c(1,2))
mfrow(c(1,2))
mfrow()
par(mfrow(c(1,2)))
par(mfrow = c(1,2))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1,3), mar = c(4,4,2,1), oma = c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
library(nlme)
library(lattice)
xyplot(, )
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data("airquality")
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
install.packages("ggplot2movies")
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, smooth = "loess")
library(swirl)
swirl()
head(airquality)
xyplot(Ozone ~ Wind, data = airquality)
xyplot(Ozone ~ Wind, data = airquality, col = "red", pch = 8)
xyplot(Ozone ~ Wind, data = airquality, col = "red", pch = "8")
xyplot(Ozone ~ Wind, data = airquality, col = "red", pch = "8", main = "Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, pch = 8, col = "red" main = "Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, pch = 8, col = "red",  main = "Big Apple Data")
xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)
)
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5,1))
play
play()
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5,1))
xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1))
nxt()
p <- xyplot(Ozone ~ Wind , data = airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["p's x.limits"]]
p[["x.limits"]]
table(f)
xyplot(y ~ x | f, layout = c(2,1))
v1
v2
myedid("plot1.R")
myedit("plot1.R")
pathtofile("plot1.R")
pathtofile("plot1.R", local = "TRUE")
source(pathtofile("plot1.R"), local = TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local = TRUE)
str(diamonds)
table(diamods$color)
table(diamonds$color)
with(diamonds, table(color, cut))
table(diamonds$color, diamonds$cut)
myedit("mylabels.R")
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local= TRUE)
xyplot(price ~carat | color * cut, data = diamonds, strip = FALSE, pch = 20, xlab = "myxlab", ylab = "myylab")
xyplot(price ~carat | color * cut, data = diamonds, strip = FALSE, pch = 20, xlab = "myxlab", ylab = "myylab", main = "mymain")
xyplot(price ~carat | color * cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price ~carat | color * cut, data = diamonds, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
sample(colors(), 10)
pal <- colorRamp(c("red", "blue"))
pal
pal(0)
pal(1)
pal(seq(0,1, len = 6))
p1 <- colorRampPalette(c("red", "blue"))
p1(2)
p1(6)
0xcc
p2 <- colorRampPalette(c("red", "yelow"))
p2 <- colorRampPalette(c("red", "yellow"))
o2
p2
p2(2)
p2(10)
showMe((p1(20)))
showMe(p2(20))
showMe(p1(20))
showMe(p2(20))
showme(p2(2))
showMe(p2(2))
p1
?rgb
p3 <- colorRampPalette(c("blue", "gree"), alpha = .5)
p3 <- colorRampPalette(c("blue", "green"), alpha = .5)
p3(0.5)
p3(5)
plot(x, y, pch = 19, col = rgb(0,.5,.5))
plot(x, y, pch = 19, col = rgb(0,.5,.5,.3))
cols <- brewer.pal(3, "BuGn")
showMe()
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal)
showMe(pal(20))
image(volcano, col = pal(20)
)
image(volcano, col = p1(20))
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, mpg)
fplot(displ, hwy, mpg)
qplot(displ, hwy, mpg)
qplot(displ, hwy, data=mpg)
names(mpg)
remove("mpg")
dataset("mpg")
library(ggplot2)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, col = drv)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point", "smooth"))
qplot(y = hwy, datat = mpg, color = drv)
qplot(y = hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, mpg, geom = drv)
qplot(hwy, mpg, geom = drv)
qplot(hwy,data =  mpg, geom = drv)
qplot(hwy,data =  mpg, geom = drv)
qplot(hwy,data =  mpg, colors = drv)
qplot(hwy,data =  mpg, color = drv)
qplot(hwy,data =  mpg, fill = drv)
qplot(displ, hwy, mpg, facets = .~ drv)
head(mpg)
qplot(displ, hwy, data = mpg, facets = .~ drv)
qplot(hwy, data = mpg, facets = .~ drv)
qplot(hwy, data = mpg, facets = drv ~., binwidth = 2)
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets = .~drv)
library(dplyr, lattice)
detach("package:dplyr", unload=TRUE)
library(dplyr, lattice)
install.packages(c("openssl", "R.oo", "shiny", "survival"))
detach("package:lattice", unload=TRUE)
library(lattice)
detach("package:lattice", unload=TRUE)
print   ("1")
d <- round(mean  (daily_steps2$steps, na.rm = TRUE), 1)
e <- round(median(daily_steps2$steps, na.rm = TRUE), 1)
print(a)
print(b)
d <- round(mean  (daily_steps2$steps, na.rm = TRUE), 1)
e <- round(median(daily_steps2$steps, na.rm = TRUE), 1)
print(d)
print(e)
d <- round(mean  (daily_steps2$steps, na.rm = TRUE), 1)
e <- round(median(daily_steps2$steps, na.rm = TRUE), 1)
print(d)
print(e)
d <- round(mean  (daily_steps2$steps, na.rm = TRUE), 1)
# Chunk 1: settinwd
##wd <- setwd(choose.dir()) #select where you want to download the data, or where you have the data already
# Chunk 2: O-uz-r
ifelse(
file.exists("activity.csv"),
print("you are ready to roll"),
ifelse(file.exists("repdata%2Fdata%2Factivity.zip"),
unzip("repdata%2Fdata%2Factivity.zip"), {
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", destfile = "./repdata%2Fdata%2Factivity.zip")
;unzip("repdata%2Fdata%2Factivity.zip")}
)
)
# Chunk 3: reading
act <- read.csv("activity.csv")
# Chunk 4
library(dplyr)
library(lattice)
# Chunk 5: stepsday
daily_steps <- aggregate(steps ~ date, data = act, sum)
# Chunk 6
hist(daily_steps$steps, breaks= 8 ,ylab = "frequency", xlab = "daily steps taken", main = "distribution of the steps taken daily in 61 days", col = "lightblue" )
# Chunk 7
a <- round(mean  (daily_steps$steps, na.rm = TRUE), 1)
b <- round(median(daily_steps$steps, na.rm = TRUE), 1)
print(a)
print(b)
legend("topright", c(paste("mean: ", a), paste("median: ", b)))
# Chunk 8: interval
interval_mean <- aggregate(steps ~ interval,data = act,  mean, na.rm = TRUE)
plot(interval_mean$interval, interval_mean$steps, type = "l", main = "activity thoughout the day", xlab= "time of day", ylab= "number of steps", col = "green")
# Chunk 9
c <- interval_mean[interval_mean$steps == max(interval_mean$steps),1]
# Chunk 10: narows
sum(is.na(act))
# Chunk 11
na <- act[is.na((act$steps)),] #dataset of all NA
j <- left_join(na, interval_mean, c("interval")) #create a new variable with the mean for each row interval
j <- j[,c(4,2,3)] #reorders the data to match the structure
colnames(j) <- c("steps", "date", "interval")
act_no_na <- act[!is.na(act$steps),] #data set witout NA
act2 <- rbind(act_no_na, j)
# Chunk 12: new_hist
daily_steps2 <- aggregate(steps ~ date, data = act2, sum)
hist(daily_steps2$steps, main = "Frequency of daily Steps", sub = "after replacing NA with interval mean", xlab = "number of steps")
# Chunk 13
d <- round(mean  (daily_steps2$steps, na.rm = TRUE), 1)
e <- round(median(daily_steps2$steps, na.rm = TRUE), 1)
print(d)
print(e)
# Chunk 14
act2$date <- as.Date(act2$date)
act2$day <- ifelse(weekdays(act2$date) %in% c("Saturday", "Sunday"), "weekend", "weekday")
act2$day <- factor(act2$day)
interval_mean2 <- aggregate(steps ~ interval + day ,data = act2, mean, na.rm = TRUE)
xyplot(steps ~ interval | day, data = interval_mean2, layout = c(1,2), ylab = "Number of steps", xlab = "Interval", type = "l")
e <- round(median(daily_steps2$steps, na.rm = TRUE), 1)
e
e <- median(daily_steps2$steps, na.rm = TRUE)
e
b <- median(daily_steps$steps, na.rm = TRUE)
b
the mean for the 2 datasets are the same since we are introducing the mean value for each NA value. The daily number of steps increases since we introduce value to observations that previously were
na. `r sum(act2$steps) - sum(act$steps` steps were intruduced
sum(act2$steps) - sum(act$steps)
sum(act2$steps)
sum(act$steps, na.rm = TRUE)
round(sum(act2$steps) - sum(act$steps, na.rm = TRUE),1)
library(knitr)
setwd("~/academic/cursos online/reproducible research/week 2")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.md")
knit2html("PA1_template.Rmd")
knit2html()
rmarkdown::render("PA1_template.Rmd")
knit2html("Pa1_template.Rmd", force_v1 = TRUE)
knit2html("Pa1_template.Rmd", force_v1 = TRUE)
knit2html("Pa1_template.Rmd", force_v1 = TRUE)
knit2html("Pa1_template.Rmd", force_v1 = TRUE)
knit2html("Pa1_template.Rmd", force_v1 = TRUE)
